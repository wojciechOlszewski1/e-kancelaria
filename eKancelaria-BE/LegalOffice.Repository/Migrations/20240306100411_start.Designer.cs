// <auto-generated />
using System;
using LegalOffice.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegalOffice.Repository.Migrations
{
    [DbContext(typeof(LegalOfficeDbContext))]
    [Migration("20240306100411_start")]
    partial class start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LegalOffice.Domain.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("InterestRate")
                        .HasColumnType("smallint");

                    b.Property<short>("Jointly")
                        .HasColumnType("smallint");

                    b.Property<int?>("LawsuitId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Proofs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LawsuitId");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short?>("AccordingToStandards")
                        .HasColumnType("smallint");

                    b.Property<short?>("Adjudication")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cost");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Adjudication")
                        .HasColumnType("smallint");

                    b.Property<short>("Exemption")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Identifier")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("IdentifierSpecified")
                        .HasColumnType("bit");

                    b.Property<bool>("ReducedCourtFee")
                        .HasColumnType("bit");

                    b.Property<bool>("ReducedCourtFeeSpecified")
                        .HasColumnType("bit");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Fee");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.GroundTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GroundTemplates");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.InterestPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("AmountSpecified")
                        .HasColumnType("bit");

                    b.Property<int?>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("FromSubmission")
                        .HasColumnType("smallint");

                    b.Property<bool>("FromSubmissionSpecified")
                        .HasColumnType("bit");

                    b.Property<short>("IsStatutory")
                        .HasColumnType("smallint");

                    b.Property<short>("Period")
                        .HasColumnType("smallint");

                    b.Property<bool>("PeriodSpecified")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RateSpecified")
                        .HasColumnType("bit");

                    b.Property<short>("ToPayment")
                        .HasColumnType("smallint");

                    b.Property<bool>("ToPaymentSpecified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("InterestPeriod");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Lawsuit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountOfControversy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CostId")
                        .HasColumnType("int");

                    b.Property<int>("FeeId")
                        .HasColumnType("int");

                    b.Property<string>("Ground")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefundAccountId")
                        .HasColumnType("int");

                    b.Property<int>("SubmitterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.HasIndex("FeeId");

                    b.HasIndex("RefundAccountId");

                    b.HasIndex("SubmitterId");

                    b.ToTable("Lawsuits");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.PersonForCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("PersonForCompany");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Plantiff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool>("IsForeigner")
                        .HasColumnType("bit");

                    b.Property<bool>("LacksIdentificationNumbers")
                        .HasColumnType("bit");

                    b.Property<int?>("LawsuitId")
                        .HasColumnType("int");

                    b.Property<int?>("LawsuitId1")
                        .HasColumnType("int");

                    b.Property<int>("PartyType")
                        .HasColumnType("int");

                    b.Property<short>("Representation")
                        .HasColumnType("smallint");

                    b.Property<string>("Tin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LawsuitId");

                    b.HasIndex("LawsuitId1");

                    b.ToTable("Plantiffs");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.RefundAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefundAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefundAccount");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Submitter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Basis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<short>("Proxy")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("PersonId");

                    b.ToTable("Submitter");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Company", b =>
                {
                    b.HasBaseType("LegalOffice.Domain.Models.Plantiff");

                    b.Property<string>("Headquarters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("IsRegistered")
                        .HasColumnType("smallint");

                    b.Property<string>("KRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REGON")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Plantiffs", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("Company_Name");
                        });

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Person", b =>
                {
                    b.HasBaseType("LegalOffice.Domain.Models.Plantiff");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherMaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Claim", b =>
                {
                    b.HasOne("LegalOffice.Domain.Models.Lawsuit", null)
                        .WithMany("Claims")
                        .HasForeignKey("LawsuitId");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.InterestPeriod", b =>
                {
                    b.HasOne("LegalOffice.Domain.Models.Claim", null)
                        .WithMany("InterestPeriods")
                        .HasForeignKey("ClaimId");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Lawsuit", b =>
                {
                    b.HasOne("LegalOffice.Domain.Models.Cost", "Cost")
                        .WithMany()
                        .HasForeignKey("CostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegalOffice.Domain.Models.Fee", "Fee")
                        .WithMany()
                        .HasForeignKey("FeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegalOffice.Domain.Models.RefundAccount", "RefundAccount")
                        .WithMany()
                        .HasForeignKey("RefundAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegalOffice.Domain.Models.Submitter", "Submitter")
                        .WithMany()
                        .HasForeignKey("SubmitterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cost");

                    b.Navigation("Fee");

                    b.Navigation("RefundAccount");

                    b.Navigation("Submitter");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.PersonForCompany", b =>
                {
                    b.HasOne("LegalOffice.Domain.Models.Company", null)
                        .WithMany("BoardMembers")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Plantiff", b =>
                {
                    b.HasOne("LegalOffice.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegalOffice.Domain.Models.Lawsuit", null)
                        .WithMany("Defendant")
                        .HasForeignKey("LawsuitId");

                    b.HasOne("LegalOffice.Domain.Models.Lawsuit", null)
                        .WithMany("Plantiffs")
                        .HasForeignKey("LawsuitId1");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Submitter", b =>
                {
                    b.HasOne("LegalOffice.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegalOffice.Domain.Models.PersonForCompany", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Claim", b =>
                {
                    b.Navigation("InterestPeriods");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Lawsuit", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Defendant");

                    b.Navigation("Plantiffs");
                });

            modelBuilder.Entity("LegalOffice.Domain.Models.Company", b =>
                {
                    b.Navigation("BoardMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
